---
import OpenGraph from '../../fragments/OpenGraph.astro';
import Layout from '../../layouts/index.astro'
import Content from '../../layouts/content.astro'

import { type CollectionEntry, getCollection } from 'astro:content';


export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map(post => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const { Content : PostContent, } = await Astro.props.render();
const { datePub, description, title, dateUpd, thumbnail} = Astro.props.data;
---

<Layout {...{title, description}}>
	<Fragment slot="head">
		<OpenGraph {...{title, description, image : 'public/favicon.svg' }}/>
	</Fragment>
	<Fragment>
		<Content>
			<h1>{title}</h1>
			<div class="blog-layout">
				<PostContent/>
			</div>
		</Content>
	</Fragment>
</Layout>

<style is:global>
	.blog-layout {
		& {
			line-height: 1.5;
		}

		& pre:has(> code:only-child) {
			& {
				padding : 1rem;
				border-radius: .5rem;
				border: 1px solid white;
			}

			& > code {
				tab-size: 2;
			}
		}
		& .snippet {
			& {

				padding : 1rem;
				border-radius: .5rem;
				border: 1px solid currentColor;
			}

			& ul {
				padding-left: 1rem;
				margin-block: .5rem;
			}
		}
		& :not(pre) > code {
			padding: .0rem .25rem;
			background-color: #8886;
			border-radius: .25rem;
		}

		& kbd {
			padding: 0.125rem .25rem .25rem;
			font-size: small;
			vertical-align: baseline;

			vertical-align: middle;
			
			--soft-border: color-mix(in srgb, currentColor, transparent 25%);

			border: solid 1px var(--soft-border);
			border-radius: .25rem;

			box-shadow: inset 0 -2px 0 var(--soft-border);
		}

		& ul {
			padding-left: 1rem;
		}
	}
</style>